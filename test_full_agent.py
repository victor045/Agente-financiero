"""
Test para probar el agente completo con la pregunta espec√≠fica de mayo.
"""

import sys
from pathlib import Path

# Agregar el directorio actual al path
sys.path.insert(0, str(Path(__file__).parent))

def test_full_agent_may_question():
    """Test del agente completo con la pregunta espec√≠fica de mayo."""
    
    print("üß™ TESTING: Agente Completo - Pregunta de Mayo")
    print("=" * 60)
    
    # Importar el agente
    import enhanced_financial_agent_configurable
    EnhancedFinancialAgentConfigurable = enhanced_financial_agent_configurable.EnhancedFinancialAgentConfigurable
    FinancialAgentConfig = enhanced_financial_agent_configurable.FinancialAgentConfig
    
    try:
        # Crear agente
        config = FinancialAgentConfig()
        agent = EnhancedFinancialAgentConfigurable(config)
        
        # Pregunta espec√≠fica
        test_question = "Cu√°l es el total de facturas por cobrar emitidas en mayo?"
        
        print(f"‚ùì Pregunta: {test_question}")
        print("=" * 60)
        
        # Procesar pregunta
        response = agent.process_question(test_question)
        
        # Mostrar respuesta
        print("\nüìã RESPUESTA COMPLETA:")
        print("=" * 60)
        print(response)
        
        # Mostrar resumen
        agent.show_execution_summary()
        
        # Verificar que la respuesta es espec√≠fica
        if "mayo" in response.lower() and "por cobrar" in response.lower():
            print("\n‚úÖ TEST PASADO: Respuesta espec√≠fica para mayo y por cobrar")
            
            # Verificar que contiene n√∫meros espec√≠ficos
            if any(char.isdigit() for char in response):
                print("‚úÖ TEST PASADO: Respuesta contiene datos num√©ricos")
            else:
                print("‚ùå TEST FALLIDO: Respuesta no contiene datos num√©ricos")
        else:
            print("\n‚ùå TEST FALLIDO: Respuesta no es espec√≠fica para mayo")
            
    except Exception as e:
        print(f"\n‚ùå ERROR EN TEST: {e}")
        import traceback
        traceback.print_exc()


def main():
    """Funci√≥n principal."""
    print("üéØ TESTING AGENTE COMPLETO")
    print("=" * 60)
    
    try:
        test_full_agent_may_question()
        
        print("\n" + "=" * 60)
        print("üéâ Test completado")
        
    except KeyboardInterrupt:
        print("\nüëã Test interrumpido")
    except Exception as e:
        print(f"\n‚ùå Error en test: {e}")


if __name__ == "__main__":
    main() 