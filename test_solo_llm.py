#!/usr/bin/env python3
"""
Test para verificar que el sistema funciona correctamente usando solo LLM.
"""
import sys
import os
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

from enhanced_financial_agent_with_llm import EnhancedFinancialAgentWithLLM, FinancialAgentConfig

def test_solo_llm():
    print("üß™ TESTING SISTEMA SOLO LLM")
    print("=" * 60)
    
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("‚ö†Ô∏è  OPENAI_API_KEY no encontrada")
        print("üí° Configura tu API key: export OPENAI_API_KEY='tu-api-key'")
        return
    
    config = FinancialAgentConfig(
        enable_llm=True,
        enable_dynamic_visualization=False,
        enable_feedback=False
    )
    
    agent = EnhancedFinancialAgentWithLLM(config)
    
    # Test de diferentes tipos de preguntas
    test_questions = [
        ("De las facturas por pagar cu√°l es la m√°s alta?", "Pregunta espec√≠fica"),
        ("Cu√°l es el total de facturas por cobrar emitidas en mayo?", "Pregunta con filtro de fecha"),
        ("Cual fue el mes con mas facturas?", "Pregunta de an√°lisis"),
        ("Cu√°l es el proveedor que mayor monto total de facturas por pagar emiti√≥?", "Pregunta de proveedores"),
        ("tomando en cuenta las facturas pasadas, cual seria el proveedor con mas facturas en el futuro?", "Pregunta predictiva"),
        ("como se comportara la facturaci√≥n en los proximos meses?", "Pregunta de tendencias"),
        ("cual es el analisis de tendencias de los proveedores?", "Pregunta de an√°lisis complejo")
    ]
    
    for i, (question, description) in enumerate(test_questions, 1):
        print(f"\nüìã TEST {i}: {description}")
        print(f"‚ùì Pregunta: {question}")
        
        try:
            response = agent.process_question(question)
            print(f"‚úÖ Respuesta: {response[:800]}...")
            
            # Verificar que siempre usa LLM
            if "LLM REAL" in response:
                print("ü§ñ ‚úÖ Us√≥ LLM correctamente")
            else:
                print("‚ùå No us√≥ LLM")
                
        except Exception as e:
            print(f"‚ùå Error: {e}")
    
    print("\nüéØ TEST DE SISTEMA SOLO LLM FINALIZADO")

if __name__ == "__main__":
    test_solo_llm() 